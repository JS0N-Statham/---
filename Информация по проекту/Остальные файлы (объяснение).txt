Зачем нужен app/init.py?


from flask import Flask
from .config import Config
from .routes import main

def create_app():
    app = Flask(__name__, template_folder='../templates', static_folder='../static')
    app.config.from_object(Config)
    app.config['ADMIN_NAME'] = 'Manager'

    app.register_blueprint(main)

    return app



Создание приложения Flask: Функция create_app() инициализирует приложение Flask.

Конфигурация приложения: Загрузка конфигурационных параметров из класса Config.

Регистрация блупринта: Регистрация блупринта main, который содержит маршруты приложения.

Определение путей к шаблонам и статическим файлам: Установка путей к папкам с шаблонами и статическими файлами.

===============================================================================================================================

2. app/config.py


class Config:
    SECRET_KEY = 'your_secret_key'
    MYSQL_HOST = 'localhost'
    MYSQL_USER = 'root'
    MYSQL_PASSWORD = '1111'
    MYSQL_DB = 'consumable_db'
    ADMIN_NAME = 'Manager'


Централизованная конфигурация: Содержит все конфигурационные параметры приложения, 
такие как секретный ключ, параметры подключения к базе данных и имя администратора.

Безопасность и удобство: Хранение конфигурационных параметров в одном месте 
упрощает их управление и обеспечивает безопасность, исключая их из основного кода.

===============================================================================================================================

app/models.py


import pymysql.cursors
from flask import current_app

def get_db_connection():
    return pymysql.connect(
        host=current_app.config['MYSQL_HOST'],
        user=current_app.config['MYSQL_USER'],
        password=current_app.config['MYSQL_PASSWORD'],
        database=current_app.config['MYSQL_DB'],
        cursorclass=pymysql.cursors.DictCursor
    )

Зачем нужен этот файл?
Подключение к базе данных: Содержит функцию get_db_connection(), 
которая устанавливает и возвращает соединение с базой данных MySQL.

Инкапсуляция логики работы с базой данных: Позволяет отделить логику 
работы с базой данных от логики маршрутов приложения.

===============================================================================================================================


app/routes.py


Маршруты в файле routes.py — это URL-адреса, которые обрабатываются вашим приложением Flask. 

Каждый маршрут ассоциируется с определенной функцией, 
которая выполняется, когда пользователь переходит по этому URL-адресу. 
Эти функции определяют, что происходит при обращении к соответствующим 
URL-адресам, такие как отображение страницы, обработка данных формы, перенаправление и другие действия.

